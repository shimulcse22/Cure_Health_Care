// Top-level build file where you can add configuration options common to all sub-projects/modules.
buildscript {
    ext {
        androidGradlePluginVersion = '7.0.4'
        kotlinVersion = '1.5.20'
        navSaveArgsVersion = '2.5.3'

        minSdk = 21
        compileSdk = 33

        //Ui
        appcompatVersion = '1.1.0'
        APPCOMPAT = "androidx.appcompat:appcompat:$appcompatVersion"

        materialVersion = '1.6.0'
        MATERIAL = "com.google.android.material:material:$materialVersion"

        constraintLayoutVersion = '2.0.0-alpha3'
        CONSTRAINT_LAYOUT = "androidx.constraintlayout:constraintlayout:$constraintLayoutVersion"

        SWIPE_REFRESH_LAYOUT = "androidx.swiperefreshlayout:swiperefreshlayout:1.1.0-beta01"



        SDP= "com.intuit.sdp:sdp-android:1.0.6"
        SSP= "com.intuit.ssp:ssp-android:1.0.6"

        lottieVersion = "3.6.0"
        LOTTIE = "com.airbnb.android:lottie:$lottieVersion"

        SCROLL_INDICATOR="ru.tinkoff.scrollingpagerindicator:scrollingpagerindicator:1.0.6"

        calligraphyVersion = '3.1.1'
        viewpumpVersion = '2.0.3'
        CALLIGRAPHY = [
                calligraphy: "io.github.inflationx:calligraphy3:${calligraphyVersion}",
                viewpump   : "io.github.inflationx:viewpump:${viewpumpVersion}"
        ]

        // Architecture Components
        lifecycleKtxVersion = '2.2.0-rc03'
        lifecycleVersion = '2.1.0'
        stateVersion = '1.0.0-rc03'
        LIFE_CYCLE = [
                extensions     : "androidx.lifecycle:lifecycle-extensions:${lifecycleVersion}",
                save_state     : "androidx.lifecycle:lifecycle-viewmodel-savedstate:${stateVersion}",
                java8          : "androidx.lifecycle:lifecycle-common-java8:${lifecycleVersion}",
                kapt           : "androidx.lifecycle:lifecycle-compiler:${lifecycleVersion}",
                test           : "androidx.arch.core:core-testing:${lifecycleVersion}",
                ktxRuntime     : "androidx.lifecycle:lifecycle-runtime-ktx:${lifecycleKtxVersion}",
                ktxLiveData    : "androidx.lifecycle:lifecycle-livedata-ktx:${lifecycleKtxVersion}",
                reactiveStreams: "androidx.lifecycle:lifecycle-reactivestreams-ktx:${lifecycleKtxVersion}",
                viewModel      : "androidx.lifecycle:lifecycle-viewmodel-ktx:${lifecycleKtxVersion}"
        ]


        // security
        cryptoVErsion = "1.1.0-alpha01"
        CRYPTO = "androidx.security:security-crypto:$cryptoVErsion"

        //sqlcipher
        sqlcipherVersion = "4.4.0"
        SQLCIPHER = "net.zetetitimberc:android-database-sqlcipher:$sqlcipherVersion"

        //Database
        roomVersion = "2.3.0"
        ROOM = [
                runtime: "androidx.room:room-runtime:$roomVersion",
                kapt   : "androidx.room:room-compiler:$roomVersion",
                ktx    : "androidx.room:room-ktx:$roomVersion"
        ]
        COROUTINES= "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.3.9"


        KOTLIN_STDLIB = "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlinVersion"

        //Retrofit
        retrofitVersion = '2.9.0'
        RETROFIT = [
                retrofit       : "com.squareup.retrofit2:retrofit:${retrofitVersion}",
                converter_moshi: "com.squareup.retrofit2:converter-moshi:${retrofitVersion}"
        ]

        moshiVersion = '1.13.0'
        MOSHI = [
                moshi: "com.squareup.moshi:moshi-kotlin:${moshiVersion}",
                kapt : "com.squareup.moshi:moshi-kotlin-codegen:${moshiVersion}"
        ]

        //Dagger
        daggerVersion = '2.42'

        assistedversion = "2:0.5.2"
        DEPENDENCY_INJECTION = [
                dagger        : "com.google.dagger:dagger:${daggerVersion}",
                support       : "com.google.dagger:dagger-android-support:${daggerVersion}",
                kapt_compiler : "com.google.dagger:dagger-compiler:${daggerVersion}",
                kapt_processor: "com.google.dagger:dagger-android-processor:${daggerVersion}"
        ]

        //NAVIGATION
        navigationVersion = '2.4.2'
        NAVIGATION = [
                fragment: "androidx.navigation:navigation-fragment-ktx:$navigationVersion",
                ui      : "androidx.navigation:navigation-ui-ktx:$navigationVersion"
        ]

        // Stetho
        stethoVersion = "1.6.0"
        STETHO = [
                stetho: "com.facebook.stetho:stetho:${stethoVersion}",
                okhttp: "com.facebook.stetho:stetho-okhttp3:${stethoVersion}"
        ]

        okhttpVersion = '5.0.0-alpha.2'

        //okhttp
        OKHTTP=[
                "com.squareup.okhttp3:okhttp:$okhttpVersion",
                "com.squareup.okhttp3:logging-interceptor:$okhttpVersion",
                'com.itkacher.okhttpprofiler:okhttpprofiler:1.0.7'
        ]
        // Utils
        ktxVersion = '1.3.0'
        ktxCollection = '1.1.0'
        ktxFragmentVersion = '1.2.5'
        KTX = [
                core     : "androidx.core:core-ktx:${ktxVersion}",
                colletion: "androidx.collection:collection-ktx:${ktxCollection}",
                fragment : "androidx.fragment:fragment-ktx:${ktxFragmentVersion}",
                activity : "androidx.activity:activity-ktx:1.1.0-rc03"
        ]

        // Timber
        TIMBER = 'com.jakewharton.timber:timber:4.7.1'


        //Glide
        glideVersion = '4.9.0'
        GLIDE = [
                glide: "com.github.bumptech.glide:glide:${glideVersion}",
                kapt : "com.github.bumptech.glide:compiler:${glideVersion}"
        ]

        //lottie
        lottieVersion = "3.6.0"
        LOTTIE = "com.airbnb.android:lottie:$lottieVersion"


        // Firebase
        FIRE_BASE = [
                core          : "com.google.firebase:firebase-core:21.1.1",
                crashlytics   : "com.crashlytics.sdk.android:crashlytics:2.10.1",
                cloudMessaging: "com.google.firebase:firebase-messaging:23.1.0"
        ]


        //Easy Permissions
        EASY_PERMISON = 'pub.devrel:easypermissions:3.0.0'



        // Leak Canary
        leakCanaryVersion = '2.0-alpha-3'
        LEAK_CANNARY = "com.squareup.leakcanary:leakcanary-android:${leakCanaryVersion}"

        //gif drawable
        GIF = "pl.droidsonroids.gif:android-gif-drawable:1.2.19"

        //KeypadOpenHideDetection
        KEYPADHIDESHOWDETECTIOIN= "net.yslibrary.keyboardvisibilityevent:keyboardvisibilityevent:3.0.0-RC1"

        // Local unit tests
        junitVersion = '4.12'
        mockitoVersion = "2.8.9"
        hamcrestVersion = '2.1'
        UNIT_TEST = [
                junit   : "junit:junit:${junitVersion}",
                mockito : "org.mockito:mockito-core:${mockitoVersion}",
                hamcrest: "org.hamcrest:hamcrest-library:${hamcrestVersion}",
        ]
        AES= "com.github.mervick:aes-everywhere-java:1.2.7"

        /*add all dependencies to this array*/
        PROJECT_KAPT = [
                DEPENDENCY_INJECTION.kapt_compiler,
                DEPENDENCY_INJECTION.kapt_processor,
                ROOM.kapt,
                GLIDE.kapt,
                MOSHI.kapt
        ]

        PROJECT_DEPENDENCIES = [
                APPCOMPAT,
                MATERIAL,
                CONSTRAINT_LAYOUT,
                SCROLL_INDICATOR,
                CALLIGRAPHY.calligraphy,
                //  CALLIGRAPHY.viewpump,
                SWIPE_REFRESH_LAYOUT,
                LIFE_CYCLE.extensions,
                LIFE_CYCLE.save_state,
                LIFE_CYCLE.java8,
                LIFE_CYCLE.ktxRuntime,
                LIFE_CYCLE.ktxLiveData,
                LIFE_CYCLE.reactiveStreams,
                LIFE_CYCLE.viewModel,
                DEPENDENCY_INJECTION.dagger,
                DEPENDENCY_INJECTION.support,
                CRYPTO,
                SDP,
                SSP,
                LOTTIE,
                ROOM.runtime,
                ROOM.ktx,
                COROUTINES,
                KEYPADHIDESHOWDETECTIOIN,
                RETROFIT.retrofit,
                RETROFIT.converter_moshi,
                MOSHI.moshi,
                NAVIGATION.fragment,
                NAVIGATION.ui,
                STETHO.stetho,
                STETHO.okhttp,
                KTX.core,
                KTX.colletion,
                KTX.fragment,
                KTX.activity,
                TIMBER,
                GLIDE.glide,
                FIRE_BASE.core,
                FIRE_BASE.crashlytics,
                FIRE_BASE.cloudMessaging,
                EASY_PERMISON,
                AES,
                GIF,
        ]

        PROJECT_COMPILE_ONLY = [
        ]



        PROJECT_TEST_DEPENDENCIES = [
                UNIT_TEST.junit,
                UNIT_TEST.mockito,
                UNIT_TEST.hamcrest,
                LIFE_CYCLE.test
        ]
        kotlin_version = '1.5.20'

    }
    repositories {
        google()
        jcenter()
        maven {url "https://plugins.gradle.org/m2/"}
        mavenCentral() // added for fb sdk
    }

    dependencies {
        classpath "com.android.tools.build:gradle:$androidGradlePluginVersion"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
        classpath "androidx.navigation:navigation-safe-args-gradle-plugin:$navSaveArgsVersion"
        //classpath 'com.google.gms:google-services:4.3.5'
        //classpath 'com.google.firebase:firebase-crashlytics-gradle:2.5.2'
        classpath "org.jlleitschuh.gradle:ktlint-gradle:9.4.1"
    }
}

allprojects {
    repositories {
        google()
        jcenter()
        flatDir {
            dirs 'libs'
        }
        maven {url "https://plugins.gradle.org/m2/"}
        maven { url 'https://jitpack.io' }
    }
}

final String APP_PLUGIN = 'com.android.application'
final String KOTLIN_ANDROID_PLUGIN = 'kotlin-android'
final String KOTLIN_EXTENSIONS_PLUGIN = 'kotlin-android-extensions'
final String KOTLIN_KAPT_PLUGIN = 'kotlin-kapt'
final String SAVE_ARGS = 'androidx.navigation.safeargs.kotlin'
final String GMS_PLUGIN = 'com.google.gms.google-services'
final String CRASHKYTICS = 'com.google.firebase.crashlytics'
final String KT_LINT = 'org.jlleitschuh.gradle.ktlint'

subprojects {
    apply plugin: APP_PLUGIN
    apply plugin: KOTLIN_ANDROID_PLUGIN
    apply plugin: KOTLIN_EXTENSIONS_PLUGIN
    apply plugin: KOTLIN_KAPT_PLUGIN
    apply plugin: SAVE_ARGS
    apply plugin: KT_LINT

    dependencies {
        api PROJECT_DEPENDENCIES

        coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:1.1.5'

        implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
        implementation 'androidx.legacy:legacy-support-v4:1.0.0'
        implementation 'androidx.work:work-runtime:2.7.1'
        // Manages the Locale used by the app
        implementation 'dev.b3nedikt.applocale:applocale:2.0.3'

// Needed to intercept view inflation
        implementation 'dev.b3nedikt.viewpump:viewpump:4.0.5'

// Allows to update the text of views at runtime
       // implementation 'dev.b3nedikt.reword:reword:4.0.0'
        //implementation 'org.greenrobot:eventbus:3.2.0'
        //implementation 'com.bogdwellers:pinchtozoom:0.1'

        testImplementation PROJECT_TEST_DEPENDENCIES
        kapt PROJECT_KAPT
        // debugApi LEAK_CANNARY
        compileOnly PROJECT_COMPILE_ONLY


        // Import the BoM for the Firebase platform
        //implementation platform('com.google.firebase:firebase-bom:31.0.3')

        implementation 'com.makeramen:roundedimageview:2.3.0'

        implementation 'com.github.nikartm:image-support:1.0.5'


    }

//    def keystorePropertiesFile = rootProject.file("keystore.properties")
//    def keystoreProperties = new Properties()
//    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

    android {
        namespace 'com.devshawon.curehealthcare'
        compileSdk 33
        dexOptions {
            incremental true
            javaMaxHeapSize = "8g"
        }
        bundle {
            language {
                enableSplit = false
            }
        }

        packagingOptions {
            exclude 'META-INF/DEPENDENCIES'
            exclude 'META-INF/LICENSE'
            exclude 'META-INF/LICENSE.txt'
            exclude 'META-INF/license.txt'
            exclude("META-INF/*.kotlin_module")
        }

        androidExtensions {
            experimental = true
        }

        compileOptions {
            // Flag to enable support for the new language APIs
            coreLibraryDesugaringEnabled true

            sourceCompatibility JavaVersion.VERSION_1_8
            targetCompatibility JavaVersion.VERSION_1_8
        }
        aaptOptions {
            noCompress "tflite"
        }

        kotlinOptions {
            jvmTarget = JavaVersion.VERSION_1_8
        }

        buildFeatures {
            dataBinding = true
            viewBinding = true
        }

        defaultConfig {
            minSdkVersion 24
            targetSdkVersion compileSdk
            multiDexEnabled true
            versionCode 1
            versionName "1.1.0"
            applicationId "com.devshawon.curehealthcare"
            vectorDrawables.useSupportLibrary = true
            //signingConfig signingConfigs.dev
            testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
            javaCompileOptions {
                annotationProcessorOptions {
                    arguments = [
                            "room.schemaLocation"  : "$projectDir/schemas".toString(),
                            "room.incremental"     : "true",
                            "room.expandProjection": "true"]
                }
            }
        }

        buildTypes {
            release {
                minifyEnabled  false
                debuggable true
                proguardFiles(
                        getDefaultProguardFile("proguard-android-optimize.txt"), "proguard-rules.pro"
                )
            }
        }

//        signingConfigs {
//
//            release {
//                def props = new Properties()
//                props.load(new FileInputStream(rootProject.file("keystore/release.properties")))
//                storeFile rootProject.file("keystore/" + props.keyStore)
//                storePassword props.keyStorePassword
//                keyAlias props.keyAlias
//                keyPassword props.keyAliasPassword
//            }
//        }

        lintOptions {
            checkReleaseBuilds false
            abortOnError false
        }

        flavorDimensions "appId"

    }
}
//  GP start     versionName "2.1.1" 05/06/2022 version Code 32
task clean(type: Delete) {
    delete rootProject.buildDir
}



